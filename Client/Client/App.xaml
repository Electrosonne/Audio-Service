<Application x:Class="Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Client"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}" x:Key="ActionButton">
                <Setter Property="Background" Value="#e52b50"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#e52b50"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
            </Style>

            <Style TargetType="Slider" x:Key="Slider" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Foreground" Value="#e52b50"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="TextBlockError">
                <Setter Property="Foreground" Value="Red"/>
            </Style>
            
            <Style TargetType="TextBlock" x:Key="TextBlock">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Style TargetType="RichTextBox" x:Key="RichTextBox">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <Style TargetType="TextBox" x:Key="TextBox" >
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="BorderThickness" Value="0 0 0 1" />
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="FontSize" Value="19"/>
                <Setter Property="Height" Value="30"/>

                <Style.Triggers>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderThickness" Value="0 0 0 3" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="PasswordBox" x:Key="PasswordBox">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="BorderThickness" Value="0 0 0 1" />
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="FontSize" Value="19"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="PasswordChar" Value="*"/>

                <Style.Triggers>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderThickness" Value="0 0 0 3" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="ProfileButton">
                <Setter Property="Background" Value="#e52b50"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#e52b50" CornerRadius="10" x:Name="Border">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard TargetProperty="Opacity">
                                                <DoubleAnimation Duration="0:0:0.2" From=".5" To="1"/>
                                                <DoubleAnimation Duration="0:0:0.2" From=".5" To="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}" x:Key="IconButton">
                <Setter Property="Background" Value="#e52b50"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#e52b50"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
            </Style>

            <Style TargetType="TabControl" x:Key="TabControl">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>

            <Style TargetType="TabItem" x:Key="TabItem">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border CornerRadius="10" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="0,0,-1,0">
                                <Grid>
                                    <Rectangle x:Name="interactive" Opacity="0.3"/>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="12,2,12,2" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100"/>
                                    <Setter Property="Background" Value="#dc143c" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Canvas Height="18">
                                <Polygon Fill="#e52b50" Points="3,15 15,15 9,3"></Polygon>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Canvas Height="18">
                                <Polygon Fill="#e52b50" Points="3,3 9,15 15,3"></Polygon>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border BorderBrush="Transparent"></Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Margin" Value="1,0,1,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle Fill="#e52b50" Margin="2"></Rectangle>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="18"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>

                    <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                    </RepeatButton>
                    <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                            </RepeatButton>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                            </Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                            </RepeatButton>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                    </RepeatButton>
                </Grid>
            </ControlTemplate>

            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
            </Style>

            <ControlTemplate x:Key="NoScroll">
                <ItemsPresenter></ItemsPresenter>
            </ControlTemplate>

            <Style TargetType="Button" x:Key="HeaderItemTab">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="IsEnabled" Value="False"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#e52b50" CornerRadius="10" x:Name="Border">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomToolTip" TargetType="ToolTip" BasedOn="{StaticResource MaterialDesignToolTip}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <Style TargetType="Button" x:Key="MenuIcon">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="IsEnabled" Value="False"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#e52b50" CornerRadius="40" x:Name="Border">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
